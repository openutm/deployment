apiVersion: apps/v1
kind: Deployment
metadata:
  name: passport
  labels:
    app: passport
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: passport
      version: v1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: passport
        version: v1
    spec:
      serviceAccountName: passport-svc
      containers:
        - name: passport
          image: flight-passport
          command:
            - ./entrypoint-prod.sh
          # imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9000
          securityContext:
            runAsUser: 10000
            runAsGroup: 10000
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          resources: {}
          env:
            - name: POSTGRES_HOST
              value: "db-passport"
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_DB
                  name: env-secrets-passport
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_USER
                  name: env-secrets-passport
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: env-secrets-passport
            - name: DATABASE_URL
              value: "pgsql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):5432/$(POSTGRES_DB)"
            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: DJANGO_SECRET_KEY
                  name: env-secrets-passport
            - name: DJANGO_SUPERUSER_USERNAME
              valueFrom:
                secretKeyRef:
                  key: DJANGO_SUPERUSER_USERNAME
                  name: env-secrets-passport
            - name: DJANGO_SUPERUSER_EMAIL
              valueFrom:
                secretKeyRef:
                  key: DJANGO_SUPERUSER_EMAIL
                  name: env-secrets-passport
            - name: DJANGO_SUPERUSER_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: DJANGO_SUPERUSER_PASSWORD
                  name: env-secrets-passport
            - name: SHOW_ADMIN
              valueFrom:
                secretKeyRef:
                  key: SHOW_ADMIN
                  name: env-secrets-passport
            - name: USING_DOCKER_COMPOSE
              valueFrom:
                secretKeyRef:
                  key: USING_DOCKER_COMPOSE
                  name: env-secrets-passport
            - name: ENABLE_DEBUG
              valueFrom:
                secretKeyRef:
                  key: ENABLE_DEBUG
                  name: env-secrets-passport
            - name: OIDC_RSA_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  key: oidc.key
                  name: oidc-key
            - name: JWT_ISSUER_DOMAIN
              valueFrom:
                secretKeyRef:
                  key: JWT_ISSUER_DOMAIN
                  name: env-secrets-passport
            - name: JWT_ISSUER_NAME
              valueFrom:
                secretKeyRef:
                  key: JWT_ISSUER_NAME
                  name: env-secrets-passport
            - name: DOMAIN_WHITELIST
              valueFrom:
                secretKeyRef:
                  key: DOMAIN_WHITELIST
                  name: env-secrets-passport
          volumeMounts:
          - name: tmp
            mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      imagePullSecrets:
        - name: registry-utmtest
