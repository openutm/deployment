apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.network/blender-default: "true"
        io.kompose.service: db
    spec:
      containers:
        - env:
            - name: PGDATA
              valueFrom:
                secretKeyRef:
                  key: PGDATA
                  name: env-secrets
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_DB
                  name: env-secrets
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_HOST
                  name: env-secrets
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: env-secrets
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_USER
                  name: env-secrets
            - name: ESP_API_KEY
              valueFrom:
                secretKeyRef:
                  key: ESP_API_KEY
                  name: env-secrets
            - name: ESP_USER_NAME
              valueFrom:
                secretKeyRef:
                  key: ESP_USER_NAME
                  name: env-secrets
            - name: ESP_EMAIL_HOST
              valueFrom:
                secretKeyRef:
                  key: ESP_EMAIL_HOST
                  name: env-secrets
          image: postgres
          imagePullPolicy: IfNotPresent
          name: db
          ports:
            - containerPort: 5432
              name: postgres
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db-data
      restartPolicy: Always
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: db-data
status: {}
